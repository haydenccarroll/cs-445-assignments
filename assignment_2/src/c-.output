Grammar

    0 $accept: program $end

    1 program: declList

    2 declList: declList decl
    3         | decl

    4 decl: varDecl
    5     | funDecl

    6 varDecl: typeSpec varDeclList SEMICOLON

    7 scopedVarDecl: STATIC typeSpec varDeclList SEMICOLON
    8              | typeSpec varDeclList SEMICOLON

    9 varDeclList: varDeclList COMMA varDeclInit
   10            | varDeclInit

   11 varDeclInit: varDeclId
   12            | varDeclId COLON simpleExp

   13 varDeclId: ID
   14          | ID LBRACK NUMCONST RBRACK

   15 typeSpec: BOOL
   16         | CHAR
   17         | INT

   18 funDecl: typeSpec ID LPAREN parms RPAREN compoundStmt
   19        | ID LPAREN parms RPAREN compoundStmt

   20 parms: parmList
   21      | %empty

   22 parmList: parmList SEMICOLON parmTypeList
   23         | parmTypeList

   24 parmTypeList: typeSpec parmIdList

   25 parmIdList: parmIdList COMMA parmId
   26           | parmId

   27 parmId: ID
   28       | ID LBRACK RBRACK

   29 stmt: openStmt
   30     | closedStmt

   31 openStmt: selectStmtOpen
   32         | iterStmtOpen

   33 closedStmt: selectStmtClosed
   34           | iterStmtClosed
   35           | expStmt
   36           | compoundStmt
   37           | returnStmt
   38           | breakStmt

   39 expStmt: exp SEMICOLON
   40        | SEMICOLON

   41 compoundStmt: LCURL localDecls stmtList RCURL

   42 localDecls: localDecls scopedVarDecl
   43           | %empty

   44 stmtList: stmtList stmt
   45         | %empty

   46 selectStmtOpen: IF simpleExp THEN stmt
   47               | IF simpleExp THEN closedStmt ELSE openStmt

   48 selectStmtClosed: IF simpleExp THEN closedStmt ELSE closedStmt

   49 iterStmtOpen: WHILE simpleExp DO openStmt
   50             | FOR ID ASS iterRange DO openStmt

   51 iterStmtClosed: WHILE simpleExp DO closedStmt
   52               | FOR ID ASS iterRange DO closedStmt

   53 iterRange: simpleExp TO simpleExp
   54          | simpleExp TO simpleExp BY simpleExp

   55 returnStmt: RETURN SEMICOLON
   56           | RETURN exp SEMICOLON

   57 breakStmt: BREAK SEMICOLON

   58 exp: mutable assignop exp
   59    | mutable INC
   60    | mutable DEC
   61    | simpleExp

   62 assignop: ASS
   63         | ADDASS
   64         | SUBASS
   65         | MULASS
   66         | DIVASS

   67 simpleExp: simpleExp OR andExp
   68          | andExp

   69 andExp: andExp AND unaryRelExp
   70       | unaryRelExp

   71 unaryRelExp: NOT unaryRelExp
   72            | relExp

   73 relExp: sumExp relop sumExp
   74       | sumExp

   75 relop: LT
   76      | LEQ
   77      | GT
   78      | GEQ
   79      | EQ
   80      | NEQ

   81 sumExp: sumExp sumOp mulExp
   82       | mulExp

   83 sumOp: PLUS
   84      | DASH

   85 mulExp: mulExp mulOp unaryExp
   86       | unaryExp

   87 mulOp: ASTERISK
   88      | SLASH
   89      | PERCENT

   90 unaryExp: unaryOp unaryExp
   91         | factor

   92 unaryOp: DASH
   93        | ASTERISK
   94        | QUESTION

   95 factor: mutable
   96       | immutable

   97 mutable: ID
   98        | ID LBRACK exp RBRACK

   99 immutable: LPAREN exp RPAREN
  100          | call
  101          | constant

  102 call: ID LPAREN args RPAREN

  103 args: argList
  104     | %empty

  105 argList: argList COMMA exp
  106        | exp

  107 constant: NUMCONST
  108         | BOOLCONST
  109         | CHARCONST
  110         | STRINGCONST


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <tokenData> (258) 13 14 18 19 27 28 50 52 97 98 102
    NUMCONST <tokenData> (259) 14 107
    CHARCONST <tokenData> (260) 109
    STRINGCONST <tokenData> (261) 110
    BOOLCONST <tokenData> (262) 108
    BOOL <tokenData> (263) 15
    CHAR <tokenData> (264) 16
    INT <tokenData> (265) 17
    IF <tokenData> (266) 46 47 48
    THEN <tokenData> (267) 46 47 48
    ELSE <tokenData> (268) 47 48
    STATIC <tokenData> (269) 7
    WHILE <tokenData> (270) 49 51
    DO <tokenData> (271) 49 50 51 52
    FOR <tokenData> (272) 50 52
    TO <tokenData> (273) 53 54
    BY <tokenData> (274) 54
    RETURN <tokenData> (275) 55 56
    BREAK <tokenData> (276) 57
    OR <tokenData> (277) 67
    AND <tokenData> (278) 69
    NOT <tokenData> (279) 71
    SEMICOLON <tokenData> (280) 6 7 8 22 39 40 55 56 57
    COMMA <tokenData> (281) 9 25 105
    COLON <tokenData> (282) 12
    LBRACK <tokenData> (283) 14 28 98
    RBRACK <tokenData> (284) 14 28 98
    LPAREN <tokenData> (285) 18 19 99 102
    RPAREN <tokenData> (286) 18 19 99 102
    LCURL <tokenData> (287) 41
    RCURL <tokenData> (288) 41
    INC <tokenData> (289) 59
    DEC <tokenData> (290) 60
    ASS <tokenData> (291) 50 52 62
    ADDASS <tokenData> (292) 63
    SUBASS <tokenData> (293) 64
    MULASS <tokenData> (294) 65
    DIVASS <tokenData> (295) 66
    PERCENT <tokenData> (296) 89
    LT <tokenData> (297) 75
    LEQ <tokenData> (298) 76
    GT <tokenData> (299) 77
    GEQ <tokenData> (300) 78
    EQ <tokenData> (301) 79
    NEQ <tokenData> (302) 80
    PLUS <tokenData> (303) 83
    DASH <tokenData> (304) 84 92
    SLASH <tokenData> (305) 88
    ASTERISK <tokenData> (306) 87 93
    QUESTION <tokenData> (307) 94


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1
        on right: 0
    declList (55)
        on left: 2 3
        on right: 1 2
    decl (56)
        on left: 4 5
        on right: 2 3
    varDecl (57)
        on left: 6
        on right: 4
    scopedVarDecl (58)
        on left: 7 8
        on right: 42
    varDeclList (59)
        on left: 9 10
        on right: 6 7 8 9
    varDeclInit (60)
        on left: 11 12
        on right: 9 10
    varDeclId (61)
        on left: 13 14
        on right: 11 12
    typeSpec (62)
        on left: 15 16 17
        on right: 6 7 8 18 24
    funDecl (63)
        on left: 18 19
        on right: 5
    parms (64)
        on left: 20 21
        on right: 18 19
    parmList (65)
        on left: 22 23
        on right: 20 22
    parmTypeList (66)
        on left: 24
        on right: 22 23
    parmIdList (67)
        on left: 25 26
        on right: 24 25
    parmId (68)
        on left: 27 28
        on right: 25 26
    stmt (69)
        on left: 29 30
        on right: 44 46
    openStmt (70)
        on left: 31 32
        on right: 29 47 49 50
    closedStmt (71)
        on left: 33 34 35 36 37 38
        on right: 30 47 48 51 52
    expStmt (72)
        on left: 39 40
        on right: 35
    compoundStmt (73)
        on left: 41
        on right: 18 19 36
    localDecls (74)
        on left: 42 43
        on right: 41 42
    stmtList (75)
        on left: 44 45
        on right: 41 44
    selectStmtOpen (76)
        on left: 46 47
        on right: 31
    selectStmtClosed (77)
        on left: 48
        on right: 33
    iterStmtOpen (78)
        on left: 49 50
        on right: 32
    iterStmtClosed (79)
        on left: 51 52
        on right: 34
    iterRange (80)
        on left: 53 54
        on right: 50 52
    returnStmt (81)
        on left: 55 56
        on right: 37
    breakStmt (82)
        on left: 57
        on right: 38
    exp (83)
        on left: 58 59 60 61
        on right: 39 56 58 98 99 105 106
    assignop (84)
        on left: 62 63 64 65 66
        on right: 58
    simpleExp (85)
        on left: 67 68
        on right: 12 46 47 48 49 51 53 54 61 67
    andExp (86)
        on left: 69 70
        on right: 67 68 69
    unaryRelExp (87)
        on left: 71 72
        on right: 69 70 71
    relExp (88)
        on left: 73 74
        on right: 72
    relop (89)
        on left: 75 76 77 78 79 80
        on right: 73
    sumExp (90)
        on left: 81 82
        on right: 73 74 81
    sumOp (91)
        on left: 83 84
        on right: 81
    mulExp (92)
        on left: 85 86
        on right: 81 82 85
    mulOp (93)
        on left: 87 88 89
        on right: 85
    unaryExp (94)
        on left: 90 91
        on right: 85 86 90
    unaryOp (95)
        on left: 92 93 94
        on right: 90
    factor (96)
        on left: 95 96
        on right: 91
    mutable (97)
        on left: 97 98
        on right: 58 59 60 95
    immutable (98)
        on left: 99 100 101
        on right: 96
    call (99)
        on left: 102
        on right: 100
    args (100)
        on left: 103 104
        on right: 102
    argList (101)
        on left: 105 106
        on right: 103 105
    constant (102)
        on left: 107 108 109 110
        on right: 101


State 0

    0 $accept: . program $end

    ID    shift, and go to state 1
    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    program   go to state 5
    declList  go to state 6
    decl      go to state 7
    varDecl   go to state 8
    typeSpec  go to state 9
    funDecl   go to state 10


State 1

   19 funDecl: ID . LPAREN parms RPAREN compoundStmt

    LPAREN  shift, and go to state 11


State 2

   15 typeSpec: BOOL .

    $default  reduce using rule 15 (typeSpec)


State 3

   16 typeSpec: CHAR .

    $default  reduce using rule 16 (typeSpec)


State 4

   17 typeSpec: INT .

    $default  reduce using rule 17 (typeSpec)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 12


State 6

    1 program: declList .
    2 declList: declList . decl

    ID    shift, and go to state 1
    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl      go to state 13
    varDecl   go to state 8
    typeSpec  go to state 9
    funDecl   go to state 10


State 7

    3 declList: decl .

    $default  reduce using rule 3 (declList)


State 8

    4 decl: varDecl .

    $default  reduce using rule 4 (decl)


State 9

    6 varDecl: typeSpec . varDeclList SEMICOLON
   18 funDecl: typeSpec . ID LPAREN parms RPAREN compoundStmt

    ID  shift, and go to state 14

    varDeclList  go to state 15
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 10

    5 decl: funDecl .

    $default  reduce using rule 5 (decl)


State 11

   19 funDecl: ID LPAREN . parms RPAREN compoundStmt

    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    $default  reduce using rule 21 (parms)

    typeSpec      go to state 18
    parms         go to state 19
    parmList      go to state 20
    parmTypeList  go to state 21


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 declList: declList decl .

    $default  reduce using rule 2 (declList)


State 14

   13 varDeclId: ID .
   14          | ID . LBRACK NUMCONST RBRACK
   18 funDecl: typeSpec ID . LPAREN parms RPAREN compoundStmt

    LBRACK  shift, and go to state 22
    LPAREN  shift, and go to state 23

    $default  reduce using rule 13 (varDeclId)


State 15

    6 varDecl: typeSpec varDeclList . SEMICOLON
    9 varDeclList: varDeclList . COMMA varDeclInit

    SEMICOLON  shift, and go to state 24
    COMMA      shift, and go to state 25


State 16

   10 varDeclList: varDeclInit .

    $default  reduce using rule 10 (varDeclList)


State 17

   11 varDeclInit: varDeclId .
   12            | varDeclId . COLON simpleExp

    COLON  shift, and go to state 26

    $default  reduce using rule 11 (varDeclInit)


State 18

   24 parmTypeList: typeSpec . parmIdList

    ID  shift, and go to state 27

    parmIdList  go to state 28
    parmId      go to state 29


State 19

   19 funDecl: ID LPAREN parms . RPAREN compoundStmt

    RPAREN  shift, and go to state 30


State 20

   20 parms: parmList .
   22 parmList: parmList . SEMICOLON parmTypeList

    SEMICOLON  shift, and go to state 31

    $default  reduce using rule 20 (parms)


State 21

   23 parmList: parmTypeList .

    $default  reduce using rule 23 (parmList)


State 22

   14 varDeclId: ID LBRACK . NUMCONST RBRACK

    NUMCONST  shift, and go to state 32


State 23

   18 funDecl: typeSpec ID LPAREN . parms RPAREN compoundStmt

    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    $default  reduce using rule 21 (parms)

    typeSpec      go to state 18
    parms         go to state 33
    parmList      go to state 20
    parmTypeList  go to state 21


State 24

    6 varDecl: typeSpec varDeclList SEMICOLON .

    $default  reduce using rule 6 (varDecl)


State 25

    9 varDeclList: varDeclList COMMA . varDeclInit

    ID  shift, and go to state 34

    varDeclInit  go to state 35
    varDeclId    go to state 17


State 26

   12 varDeclInit: varDeclId COLON . simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    simpleExp    go to state 46
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 27

   27 parmId: ID .
   28       | ID . LBRACK RBRACK

    LBRACK  shift, and go to state 59

    $default  reduce using rule 27 (parmId)


State 28

   24 parmTypeList: typeSpec parmIdList .
   25 parmIdList: parmIdList . COMMA parmId

    COMMA  shift, and go to state 60

    $default  reduce using rule 24 (parmTypeList)


State 29

   26 parmIdList: parmId .

    $default  reduce using rule 26 (parmIdList)


State 30

   19 funDecl: ID LPAREN parms RPAREN . compoundStmt

    LCURL  shift, and go to state 61

    compoundStmt  go to state 62


State 31

   22 parmList: parmList SEMICOLON . parmTypeList

    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    typeSpec      go to state 18
    parmTypeList  go to state 63


State 32

   14 varDeclId: ID LBRACK NUMCONST . RBRACK

    RBRACK  shift, and go to state 64


State 33

   18 funDecl: typeSpec ID LPAREN parms . RPAREN compoundStmt

    RPAREN  shift, and go to state 65


State 34

   13 varDeclId: ID .
   14          | ID . LBRACK NUMCONST RBRACK

    LBRACK  shift, and go to state 22

    $default  reduce using rule 13 (varDeclId)


State 35

    9 varDeclList: varDeclList COMMA varDeclInit .

    $default  reduce using rule 9 (varDeclList)


State 36

   97 mutable: ID .
   98        | ID . LBRACK exp RBRACK
  102 call: ID . LPAREN args RPAREN

    LBRACK  shift, and go to state 66
    LPAREN  shift, and go to state 67

    $default  reduce using rule 97 (mutable)


State 37

  107 constant: NUMCONST .

    $default  reduce using rule 107 (constant)


State 38

  109 constant: CHARCONST .

    $default  reduce using rule 109 (constant)


State 39

  110 constant: STRINGCONST .

    $default  reduce using rule 110 (constant)


State 40

  108 constant: BOOLCONST .

    $default  reduce using rule 108 (constant)


State 41

   71 unaryRelExp: NOT . unaryRelExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    unaryRelExp  go to state 68
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 42

   99 immutable: LPAREN . exp RPAREN

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    exp          go to state 69
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 43

   92 unaryOp: DASH .

    $default  reduce using rule 92 (unaryOp)


State 44

   93 unaryOp: ASTERISK .

    $default  reduce using rule 93 (unaryOp)


State 45

   94 unaryOp: QUESTION .

    $default  reduce using rule 94 (unaryOp)


State 46

   12 varDeclInit: varDeclId COLON simpleExp .
   67 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 72

    $default  reduce using rule 12 (varDeclInit)


State 47

   68 simpleExp: andExp .
   69 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 73

    $default  reduce using rule 68 (simpleExp)


State 48

   70 andExp: unaryRelExp .

    $default  reduce using rule 70 (andExp)


State 49

   72 unaryRelExp: relExp .

    $default  reduce using rule 72 (unaryRelExp)


State 50

   73 relExp: sumExp . relop sumExp
   74       | sumExp .
   81 sumExp: sumExp . sumOp mulExp

    LT    shift, and go to state 74
    LEQ   shift, and go to state 75
    GT    shift, and go to state 76
    GEQ   shift, and go to state 77
    EQ    shift, and go to state 78
    NEQ   shift, and go to state 79
    PLUS  shift, and go to state 80
    DASH  shift, and go to state 81

    $default  reduce using rule 74 (relExp)

    relop  go to state 82
    sumOp  go to state 83


State 51

   82 sumExp: mulExp .
   85 mulExp: mulExp . mulOp unaryExp

    PERCENT   shift, and go to state 84
    SLASH     shift, and go to state 85
    ASTERISK  shift, and go to state 86

    $default  reduce using rule 82 (sumExp)

    mulOp  go to state 87


State 52

   86 mulExp: unaryExp .

    $default  reduce using rule 86 (mulExp)


State 53

   90 unaryExp: unaryOp . unaryExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    unaryExp   go to state 88
    unaryOp    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 54

   91 unaryExp: factor .

    $default  reduce using rule 91 (unaryExp)


State 55

   95 factor: mutable .

    $default  reduce using rule 95 (factor)


State 56

   96 factor: immutable .

    $default  reduce using rule 96 (factor)


State 57

  100 immutable: call .

    $default  reduce using rule 100 (immutable)


State 58

  101 immutable: constant .

    $default  reduce using rule 101 (immutable)


State 59

   28 parmId: ID LBRACK . RBRACK

    RBRACK  shift, and go to state 89


State 60

   25 parmIdList: parmIdList COMMA . parmId

    ID  shift, and go to state 27

    parmId  go to state 90


State 61

   41 compoundStmt: LCURL . localDecls stmtList RCURL

    $default  reduce using rule 43 (localDecls)

    localDecls  go to state 91


State 62

   19 funDecl: ID LPAREN parms RPAREN compoundStmt .

    $default  reduce using rule 19 (funDecl)


State 63

   22 parmList: parmList SEMICOLON parmTypeList .

    $default  reduce using rule 22 (parmList)


State 64

   14 varDeclId: ID LBRACK NUMCONST RBRACK .

    $default  reduce using rule 14 (varDeclId)


State 65

   18 funDecl: typeSpec ID LPAREN parms RPAREN . compoundStmt

    LCURL  shift, and go to state 61

    compoundStmt  go to state 92


State 66

   98 mutable: ID LBRACK . exp RBRACK

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    exp          go to state 93
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 67

  102 call: ID LPAREN . args RPAREN

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    $default  reduce using rule 104 (args)

    exp          go to state 94
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    args         go to state 95
    argList      go to state 96
    constant     go to state 58


State 68

   71 unaryRelExp: NOT unaryRelExp .

    $default  reduce using rule 71 (unaryRelExp)


State 69

   99 immutable: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 97


State 70

   61 exp: simpleExp .
   67 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 72

    $default  reduce using rule 61 (exp)


State 71

   58 exp: mutable . assignop exp
   59    | mutable . INC
   60    | mutable . DEC
   95 factor: mutable .

    INC     shift, and go to state 98
    DEC     shift, and go to state 99
    ASS     shift, and go to state 100
    ADDASS  shift, and go to state 101
    SUBASS  shift, and go to state 102
    MULASS  shift, and go to state 103
    DIVASS  shift, and go to state 104

    $default  reduce using rule 95 (factor)

    assignop  go to state 105


State 72

   67 simpleExp: simpleExp OR . andExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    andExp       go to state 106
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 73

   69 andExp: andExp AND . unaryRelExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    unaryRelExp  go to state 107
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 74

   75 relop: LT .

    $default  reduce using rule 75 (relop)


State 75

   76 relop: LEQ .

    $default  reduce using rule 76 (relop)


State 76

   77 relop: GT .

    $default  reduce using rule 77 (relop)


State 77

   78 relop: GEQ .

    $default  reduce using rule 78 (relop)


State 78

   79 relop: EQ .

    $default  reduce using rule 79 (relop)


State 79

   80 relop: NEQ .

    $default  reduce using rule 80 (relop)


State 80

   83 sumOp: PLUS .

    $default  reduce using rule 83 (sumOp)


State 81

   84 sumOp: DASH .

    $default  reduce using rule 84 (sumOp)


State 82

   73 relExp: sumExp relop . sumExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    sumExp     go to state 108
    mulExp     go to state 51
    unaryExp   go to state 52
    unaryOp    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 83

   81 sumExp: sumExp sumOp . mulExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    mulExp     go to state 109
    unaryExp   go to state 52
    unaryOp    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 84

   89 mulOp: PERCENT .

    $default  reduce using rule 89 (mulOp)


State 85

   88 mulOp: SLASH .

    $default  reduce using rule 88 (mulOp)


State 86

   87 mulOp: ASTERISK .

    $default  reduce using rule 87 (mulOp)


State 87

   85 mulExp: mulExp mulOp . unaryExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    unaryExp   go to state 110
    unaryOp    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 88

   90 unaryExp: unaryOp unaryExp .

    $default  reduce using rule 90 (unaryExp)


State 89

   28 parmId: ID LBRACK RBRACK .

    $default  reduce using rule 28 (parmId)


State 90

   25 parmIdList: parmIdList COMMA parmId .

    $default  reduce using rule 25 (parmIdList)


State 91

   41 compoundStmt: LCURL localDecls . stmtList RCURL
   42 localDecls: localDecls . scopedVarDecl

    BOOL    shift, and go to state 2
    CHAR    shift, and go to state 3
    INT     shift, and go to state 4
    STATIC  shift, and go to state 111

    $default  reduce using rule 45 (stmtList)

    scopedVarDecl  go to state 112
    typeSpec       go to state 113
    stmtList       go to state 114


State 92

   18 funDecl: typeSpec ID LPAREN parms RPAREN compoundStmt .

    $default  reduce using rule 18 (funDecl)


State 93

   98 mutable: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 115


State 94

  106 argList: exp .

    $default  reduce using rule 106 (argList)


State 95

  102 call: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 116


State 96

  103 args: argList .
  105 argList: argList . COMMA exp

    COMMA  shift, and go to state 117

    $default  reduce using rule 103 (args)


State 97

   99 immutable: LPAREN exp RPAREN .

    $default  reduce using rule 99 (immutable)


State 98

   59 exp: mutable INC .

    $default  reduce using rule 59 (exp)


State 99

   60 exp: mutable DEC .

    $default  reduce using rule 60 (exp)


State 100

   62 assignop: ASS .

    $default  reduce using rule 62 (assignop)


State 101

   63 assignop: ADDASS .

    $default  reduce using rule 63 (assignop)


State 102

   64 assignop: SUBASS .

    $default  reduce using rule 64 (assignop)


State 103

   65 assignop: MULASS .

    $default  reduce using rule 65 (assignop)


State 104

   66 assignop: DIVASS .

    $default  reduce using rule 66 (assignop)


State 105

   58 exp: mutable assignop . exp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    exp          go to state 118
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 106

   67 simpleExp: simpleExp OR andExp .
   69 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 73

    $default  reduce using rule 67 (simpleExp)


State 107

   69 andExp: andExp AND unaryRelExp .

    $default  reduce using rule 69 (andExp)


State 108

   73 relExp: sumExp relop sumExp .
   81 sumExp: sumExp . sumOp mulExp

    PLUS  shift, and go to state 80
    DASH  shift, and go to state 81

    $default  reduce using rule 73 (relExp)

    sumOp  go to state 83


State 109

   81 sumExp: sumExp sumOp mulExp .
   85 mulExp: mulExp . mulOp unaryExp

    PERCENT   shift, and go to state 84
    SLASH     shift, and go to state 85
    ASTERISK  shift, and go to state 86

    $default  reduce using rule 81 (sumExp)

    mulOp  go to state 87


State 110

   85 mulExp: mulExp mulOp unaryExp .

    $default  reduce using rule 85 (mulExp)


State 111

    7 scopedVarDecl: STATIC . typeSpec varDeclList SEMICOLON

    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    typeSpec  go to state 119


State 112

   42 localDecls: localDecls scopedVarDecl .

    $default  reduce using rule 42 (localDecls)


State 113

    8 scopedVarDecl: typeSpec . varDeclList SEMICOLON

    ID  shift, and go to state 34

    varDeclList  go to state 120
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 114

   41 compoundStmt: LCURL localDecls stmtList . RCURL
   44 stmtList: stmtList . stmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    IF           shift, and go to state 121
    WHILE        shift, and go to state 122
    FOR          shift, and go to state 123
    RETURN       shift, and go to state 124
    BREAK        shift, and go to state 125
    NOT          shift, and go to state 41
    SEMICOLON    shift, and go to state 126
    LPAREN       shift, and go to state 42
    LCURL        shift, and go to state 61
    RCURL        shift, and go to state 127
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    stmt              go to state 128
    openStmt          go to state 129
    closedStmt        go to state 130
    expStmt           go to state 131
    compoundStmt      go to state 132
    selectStmtOpen    go to state 133
    selectStmtClosed  go to state 134
    iterStmtOpen      go to state 135
    iterStmtClosed    go to state 136
    returnStmt        go to state 137
    breakStmt         go to state 138
    exp               go to state 139
    simpleExp         go to state 70
    andExp            go to state 47
    unaryRelExp       go to state 48
    relExp            go to state 49
    sumExp            go to state 50
    mulExp            go to state 51
    unaryExp          go to state 52
    unaryOp           go to state 53
    factor            go to state 54
    mutable           go to state 71
    immutable         go to state 56
    call              go to state 57
    constant          go to state 58


State 115

   98 mutable: ID LBRACK exp RBRACK .

    $default  reduce using rule 98 (mutable)


State 116

  102 call: ID LPAREN args RPAREN .

    $default  reduce using rule 102 (call)


State 117

  105 argList: argList COMMA . exp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    exp          go to state 140
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 118

   58 exp: mutable assignop exp .

    $default  reduce using rule 58 (exp)


State 119

    7 scopedVarDecl: STATIC typeSpec . varDeclList SEMICOLON

    ID  shift, and go to state 34

    varDeclList  go to state 141
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 120

    8 scopedVarDecl: typeSpec varDeclList . SEMICOLON
    9 varDeclList: varDeclList . COMMA varDeclInit

    SEMICOLON  shift, and go to state 142
    COMMA      shift, and go to state 25


State 121

   46 selectStmtOpen: IF . simpleExp THEN stmt
   47               | IF . simpleExp THEN closedStmt ELSE openStmt
   48 selectStmtClosed: IF . simpleExp THEN closedStmt ELSE closedStmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    simpleExp    go to state 143
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 122

   49 iterStmtOpen: WHILE . simpleExp DO openStmt
   51 iterStmtClosed: WHILE . simpleExp DO closedStmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    simpleExp    go to state 144
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 123

   50 iterStmtOpen: FOR . ID ASS iterRange DO openStmt
   52 iterStmtClosed: FOR . ID ASS iterRange DO closedStmt

    ID  shift, and go to state 145


State 124

   55 returnStmt: RETURN . SEMICOLON
   56           | RETURN . exp SEMICOLON

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    SEMICOLON    shift, and go to state 146
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    exp          go to state 147
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 125

   57 breakStmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 148


State 126

   40 expStmt: SEMICOLON .

    $default  reduce using rule 40 (expStmt)


State 127

   41 compoundStmt: LCURL localDecls stmtList RCURL .

    $default  reduce using rule 41 (compoundStmt)


State 128

   44 stmtList: stmtList stmt .

    $default  reduce using rule 44 (stmtList)


State 129

   29 stmt: openStmt .

    $default  reduce using rule 29 (stmt)


State 130

   30 stmt: closedStmt .

    $default  reduce using rule 30 (stmt)


State 131

   35 closedStmt: expStmt .

    $default  reduce using rule 35 (closedStmt)


State 132

   36 closedStmt: compoundStmt .

    $default  reduce using rule 36 (closedStmt)


State 133

   31 openStmt: selectStmtOpen .

    $default  reduce using rule 31 (openStmt)


State 134

   33 closedStmt: selectStmtClosed .

    $default  reduce using rule 33 (closedStmt)


State 135

   32 openStmt: iterStmtOpen .

    $default  reduce using rule 32 (openStmt)


State 136

   34 closedStmt: iterStmtClosed .

    $default  reduce using rule 34 (closedStmt)


State 137

   37 closedStmt: returnStmt .

    $default  reduce using rule 37 (closedStmt)


State 138

   38 closedStmt: breakStmt .

    $default  reduce using rule 38 (closedStmt)


State 139

   39 expStmt: exp . SEMICOLON

    SEMICOLON  shift, and go to state 149


State 140

  105 argList: argList COMMA exp .

    $default  reduce using rule 105 (argList)


State 141

    7 scopedVarDecl: STATIC typeSpec varDeclList . SEMICOLON
    9 varDeclList: varDeclList . COMMA varDeclInit

    SEMICOLON  shift, and go to state 150
    COMMA      shift, and go to state 25


State 142

    8 scopedVarDecl: typeSpec varDeclList SEMICOLON .

    $default  reduce using rule 8 (scopedVarDecl)


State 143

   46 selectStmtOpen: IF simpleExp . THEN stmt
   47               | IF simpleExp . THEN closedStmt ELSE openStmt
   48 selectStmtClosed: IF simpleExp . THEN closedStmt ELSE closedStmt
   67 simpleExp: simpleExp . OR andExp

    THEN  shift, and go to state 151
    OR    shift, and go to state 72


State 144

   49 iterStmtOpen: WHILE simpleExp . DO openStmt
   51 iterStmtClosed: WHILE simpleExp . DO closedStmt
   67 simpleExp: simpleExp . OR andExp

    DO  shift, and go to state 152
    OR  shift, and go to state 72


State 145

   50 iterStmtOpen: FOR ID . ASS iterRange DO openStmt
   52 iterStmtClosed: FOR ID . ASS iterRange DO closedStmt

    ASS  shift, and go to state 153


State 146

   55 returnStmt: RETURN SEMICOLON .

    $default  reduce using rule 55 (returnStmt)


State 147

   56 returnStmt: RETURN exp . SEMICOLON

    SEMICOLON  shift, and go to state 154


State 148

   57 breakStmt: BREAK SEMICOLON .

    $default  reduce using rule 57 (breakStmt)


State 149

   39 expStmt: exp SEMICOLON .

    $default  reduce using rule 39 (expStmt)


State 150

    7 scopedVarDecl: STATIC typeSpec varDeclList SEMICOLON .

    $default  reduce using rule 7 (scopedVarDecl)


State 151

   46 selectStmtOpen: IF simpleExp THEN . stmt
   47               | IF simpleExp THEN . closedStmt ELSE openStmt
   48 selectStmtClosed: IF simpleExp THEN . closedStmt ELSE closedStmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    IF           shift, and go to state 121
    WHILE        shift, and go to state 122
    FOR          shift, and go to state 123
    RETURN       shift, and go to state 124
    BREAK        shift, and go to state 125
    NOT          shift, and go to state 41
    SEMICOLON    shift, and go to state 126
    LPAREN       shift, and go to state 42
    LCURL        shift, and go to state 61
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    stmt              go to state 155
    openStmt          go to state 129
    closedStmt        go to state 156
    expStmt           go to state 131
    compoundStmt      go to state 132
    selectStmtOpen    go to state 133
    selectStmtClosed  go to state 134
    iterStmtOpen      go to state 135
    iterStmtClosed    go to state 136
    returnStmt        go to state 137
    breakStmt         go to state 138
    exp               go to state 139
    simpleExp         go to state 70
    andExp            go to state 47
    unaryRelExp       go to state 48
    relExp            go to state 49
    sumExp            go to state 50
    mulExp            go to state 51
    unaryExp          go to state 52
    unaryOp           go to state 53
    factor            go to state 54
    mutable           go to state 71
    immutable         go to state 56
    call              go to state 57
    constant          go to state 58


State 152

   49 iterStmtOpen: WHILE simpleExp DO . openStmt
   51 iterStmtClosed: WHILE simpleExp DO . closedStmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    IF           shift, and go to state 121
    WHILE        shift, and go to state 122
    FOR          shift, and go to state 123
    RETURN       shift, and go to state 124
    BREAK        shift, and go to state 125
    NOT          shift, and go to state 41
    SEMICOLON    shift, and go to state 126
    LPAREN       shift, and go to state 42
    LCURL        shift, and go to state 61
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    openStmt          go to state 157
    closedStmt        go to state 158
    expStmt           go to state 131
    compoundStmt      go to state 132
    selectStmtOpen    go to state 133
    selectStmtClosed  go to state 134
    iterStmtOpen      go to state 135
    iterStmtClosed    go to state 136
    returnStmt        go to state 137
    breakStmt         go to state 138
    exp               go to state 139
    simpleExp         go to state 70
    andExp            go to state 47
    unaryRelExp       go to state 48
    relExp            go to state 49
    sumExp            go to state 50
    mulExp            go to state 51
    unaryExp          go to state 52
    unaryOp           go to state 53
    factor            go to state 54
    mutable           go to state 71
    immutable         go to state 56
    call              go to state 57
    constant          go to state 58


State 153

   50 iterStmtOpen: FOR ID ASS . iterRange DO openStmt
   52 iterStmtClosed: FOR ID ASS . iterRange DO closedStmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    iterRange    go to state 159
    simpleExp    go to state 160
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 154

   56 returnStmt: RETURN exp SEMICOLON .

    $default  reduce using rule 56 (returnStmt)


State 155

   46 selectStmtOpen: IF simpleExp THEN stmt .

    $default  reduce using rule 46 (selectStmtOpen)


State 156

   30 stmt: closedStmt .
   47 selectStmtOpen: IF simpleExp THEN closedStmt . ELSE openStmt
   48 selectStmtClosed: IF simpleExp THEN closedStmt . ELSE closedStmt

    ELSE  shift, and go to state 161

    $default  reduce using rule 30 (stmt)


State 157

   49 iterStmtOpen: WHILE simpleExp DO openStmt .

    $default  reduce using rule 49 (iterStmtOpen)


State 158

   51 iterStmtClosed: WHILE simpleExp DO closedStmt .

    $default  reduce using rule 51 (iterStmtClosed)


State 159

   50 iterStmtOpen: FOR ID ASS iterRange . DO openStmt
   52 iterStmtClosed: FOR ID ASS iterRange . DO closedStmt

    DO  shift, and go to state 162


State 160

   53 iterRange: simpleExp . TO simpleExp
   54          | simpleExp . TO simpleExp BY simpleExp
   67 simpleExp: simpleExp . OR andExp

    TO  shift, and go to state 163
    OR  shift, and go to state 72


State 161

   47 selectStmtOpen: IF simpleExp THEN closedStmt ELSE . openStmt
   48 selectStmtClosed: IF simpleExp THEN closedStmt ELSE . closedStmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    IF           shift, and go to state 121
    WHILE        shift, and go to state 122
    FOR          shift, and go to state 123
    RETURN       shift, and go to state 124
    BREAK        shift, and go to state 125
    NOT          shift, and go to state 41
    SEMICOLON    shift, and go to state 126
    LPAREN       shift, and go to state 42
    LCURL        shift, and go to state 61
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    openStmt          go to state 164
    closedStmt        go to state 165
    expStmt           go to state 131
    compoundStmt      go to state 132
    selectStmtOpen    go to state 133
    selectStmtClosed  go to state 134
    iterStmtOpen      go to state 135
    iterStmtClosed    go to state 136
    returnStmt        go to state 137
    breakStmt         go to state 138
    exp               go to state 139
    simpleExp         go to state 70
    andExp            go to state 47
    unaryRelExp       go to state 48
    relExp            go to state 49
    sumExp            go to state 50
    mulExp            go to state 51
    unaryExp          go to state 52
    unaryOp           go to state 53
    factor            go to state 54
    mutable           go to state 71
    immutable         go to state 56
    call              go to state 57
    constant          go to state 58


State 162

   50 iterStmtOpen: FOR ID ASS iterRange DO . openStmt
   52 iterStmtClosed: FOR ID ASS iterRange DO . closedStmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    IF           shift, and go to state 121
    WHILE        shift, and go to state 122
    FOR          shift, and go to state 123
    RETURN       shift, and go to state 124
    BREAK        shift, and go to state 125
    NOT          shift, and go to state 41
    SEMICOLON    shift, and go to state 126
    LPAREN       shift, and go to state 42
    LCURL        shift, and go to state 61
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    openStmt          go to state 166
    closedStmt        go to state 167
    expStmt           go to state 131
    compoundStmt      go to state 132
    selectStmtOpen    go to state 133
    selectStmtClosed  go to state 134
    iterStmtOpen      go to state 135
    iterStmtClosed    go to state 136
    returnStmt        go to state 137
    breakStmt         go to state 138
    exp               go to state 139
    simpleExp         go to state 70
    andExp            go to state 47
    unaryRelExp       go to state 48
    relExp            go to state 49
    sumExp            go to state 50
    mulExp            go to state 51
    unaryExp          go to state 52
    unaryOp           go to state 53
    factor            go to state 54
    mutable           go to state 71
    immutable         go to state 56
    call              go to state 57
    constant          go to state 58


State 163

   53 iterRange: simpleExp TO . simpleExp
   54          | simpleExp TO . simpleExp BY simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    simpleExp    go to state 168
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 164

   47 selectStmtOpen: IF simpleExp THEN closedStmt ELSE openStmt .

    $default  reduce using rule 47 (selectStmtOpen)


State 165

   48 selectStmtClosed: IF simpleExp THEN closedStmt ELSE closedStmt .

    $default  reduce using rule 48 (selectStmtClosed)


State 166

   50 iterStmtOpen: FOR ID ASS iterRange DO openStmt .

    $default  reduce using rule 50 (iterStmtOpen)


State 167

   52 iterStmtClosed: FOR ID ASS iterRange DO closedStmt .

    $default  reduce using rule 52 (iterStmtClosed)


State 168

   53 iterRange: simpleExp TO simpleExp .
   54          | simpleExp TO simpleExp . BY simpleExp
   67 simpleExp: simpleExp . OR andExp

    BY  shift, and go to state 169
    OR  shift, and go to state 72

    $default  reduce using rule 53 (iterRange)


State 169

   54 iterRange: simpleExp TO simpleExp BY . simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    DASH         shift, and go to state 43
    ASTERISK     shift, and go to state 44
    QUESTION     shift, and go to state 45

    simpleExp    go to state 170
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryOp      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 170

   54 iterRange: simpleExp TO simpleExp BY simpleExp .
   67 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 72

    $default  reduce using rule 54 (iterRange)
